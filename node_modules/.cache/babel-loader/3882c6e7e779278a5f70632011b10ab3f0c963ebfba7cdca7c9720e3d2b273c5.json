{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordPage.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectorWords, deleteNewWord } from \"./wordsSlice\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WordPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    Word\n  } = useParams();\n  const type1 = useSelector(selectorType1);\n  const type2 = useSelector(selectorType2);\n  const words = useSelector(selectorWords);\n  const word = words.find(item => item.name === Word);\n  const wordIndex = words.findIndex(item => item.name === Word);\n  console.log(\"wordIndex\" + wordIndex);\n  console.log(\"wordIndex\" + (words.length + wordIndex - 1) % words.length);\n  console.log(\"wordIndex\" + (wordIndex + 1) % words.length);\n  const prviousWord = words[(wordIndex - 1) % words.length].name;\n  const nextWord = words[(wordIndex + 1) % words.length].name;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: word.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"pronounce:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: word.pronounce\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: word.type1.map((item, index) => {\n          if (item) return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: type1[index].type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, `wordPage-typ1${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: word.type2.map((item, index) => {\n          if (item) return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: type2[index].type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, `wordPage-typ2${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: word.descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            border: '2px solid black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"meaning:\", description.meaning]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"type\",\n            children: [\"type: \", description.type1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: description.examples.map((example, indexExample) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: example\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)\n            }, `${word.name}-description${index}-example${indexExample}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, `${word.name}-description${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/edit/${word.name}`,\n      children: \"Edit Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => dispatch(deleteNewWord(word)),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(WordPage, \"/Tx05UMrAAkLO5bj01ierWCcUe0=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector];\n});\n_c = WordPage;\nexport default WordPage;\n\n//            <Link to={`/${prviousWord}`}>previous Word</Link>\n//<Link to={`/${nextWord}`}>next Word</Link>\nvar _c;\n$RefreshReg$(_c, \"WordPage\");","map":{"version":3,"names":["useSelector","useDispatch","selectorWords","deleteNewWord","selectorType1","selectorType2","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","WordPage","_s","dispatch","Word","type1","type2","words","word","find","item","name","wordIndex","findIndex","console","log","length","prviousWord","nextWord","children","fileName","_jsxFileName","lineNumber","columnNumber","pronounce","map","index","type","descriptions","description","style","border","meaning","className","examples","example","indexExample","to","onClick","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordPage.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { selectorWords, deleteNewWord } from \"./wordsSlice\"\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\"\nimport { Link, useParams } from \"react-router-dom\"\n\nconst WordPage = () => {\n    const dispatch = useDispatch();\n    const { Word } = useParams();\n    const type1 = useSelector(selectorType1);\n    const type2 = useSelector(selectorType2);\n    const words = useSelector(selectorWords);\n\n    const word = words.find((item) => (item.name === Word));\n    const wordIndex = words.findIndex((item) => (item.name === Word));\n\n    console.log(\"wordIndex\"+wordIndex);\n    console.log(\"wordIndex\"+(words.length+wordIndex-1)%words.length);\n    console.log(\"wordIndex\"+(wordIndex+1)%words.length);\n    const prviousWord = words[(wordIndex-1)%words.length].name;\n    const nextWord = words[(wordIndex+1)%words.length].name;\n\n    return(\n        <>\n            <article>\n                {/*word name*/}\n                <h2>{word.name}</h2>\n\n                {/*pronounce*/}\n                <h3>pronounce:</h3>\n                <p>{word.pronounce}</p>\n\n                {/*type1*/}\n                <ul>{\n                    word.type1.map((item, index)=>{\n                        if(item) return(\n                            <li key={`wordPage-typ1${index}`}>\n                                <p>{type1[index].type}</p>\n                            </li>\n                        )\n                    })\n                }</ul>\n\n                {/*type2*/}\n                <ul>{\n                    word.type2.map((item, index)=>{\n                        if(item) return(\n                            <li key={`wordPage-typ2${index}`}>\n                                <p>{type2[index].type}</p>\n                            </li>\n                        )\n                    })\n                }</ul>\n\n                {/*description*/}\n                <h3>descriptions</h3>\n                <ol>{\n                    word.descriptions.map((description,index)=>(\n                        <li key={`${word.name}-description${index}`} style={{ border: '2px solid black' }}>\n                            <h4>meaning:{description.meaning}</h4>\n                            <p className=\"type\">type: {description.type1}</p>\n                            <p>example:</p>\n                            <ol>{\n                                description.examples.map((example, indexExample)=>(\n                                    <li key={`${word.name}-description${index}-example${indexExample}`}>\n                                        <p>{example}</p>\n                                    </li>\n                                ))\n                            }</ol>\n                        </li>\n                    ))\n                }</ol>\n            </article>\n\n            <Link to={`/edit/${word.name}`}>Edit Word</Link>\n            <button type=\"button\" onClick={()=>dispatch(deleteNewWord(word))}>delete</button>\n        </>\n    );\n}\nexport default WordPage\n\n//            <Link to={`/${prviousWord}`}>previous Word</Link>\n//<Link to={`/${nextWord}`}>next Word</Link>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}