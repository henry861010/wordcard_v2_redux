{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\nimport { selectorStatus } from \"./wordsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wordslist = () => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    id: \"loading\",\n    children: \"error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Wordslist;\nexport default Wordslist;\n\n/*\nconst Wordslist = () => {\n    const [ selectedWords , setSelectedWords ] = useState();\n    const status = useSelector(selectorStatus);\n    console.log(\"Wordslist\")\n\n    if(status===\"pending\") return(\n        <h2 id=\"loading\">loading</h2>\n    )\n    else if(status===\"fullfilled\") return(\n        <>\n            <h2 id=\"show\">show</h2>\n            <SearchBar setSelectedWords={setSelectedWords}/>\n            <ShowWords selectedWords={selectedWords}/>\n            </>\n    )\n    else if(status===\"error\") return(\n        <h2 id=\"loading\">error!</h2>\n    )\n}\nexport default Wordslist\n*/\nvar _c;\n$RefreshReg$(_c, \"Wordslist\");","map":{"version":3,"names":["useState","useSelector","SearchBar","ShowWords","selectorStatus","jsxDEV","_jsxDEV","Wordslist","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\n\nimport { selectorStatus } from \"./wordsSlice\";\n\nconst Wordslist = () => {\n    return(\n        <h2 id=\"loading\">error!</h2>\n    )\n}\nexport default Wordslist\n\n/*\nconst Wordslist = () => {\n    const [ selectedWords , setSelectedWords ] = useState();\n    const status = useSelector(selectorStatus);\n    console.log(\"Wordslist\")\n\n    if(status===\"pending\") return(\n        <h2 id=\"loading\">loading</h2>\n    )\n    else if(status===\"fullfilled\") return(\n        <>\n            <h2 id=\"show\">show</h2>\n            <SearchBar setSelectedWords={setSelectedWords}/>\n            <ShowWords selectedWords={selectedWords}/>\n            </>\n    )\n    else if(status===\"error\") return(\n        <h2 id=\"loading\">error!</h2>\n    )\n}\nexport default Wordslist\n*/"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAEnC,SAASC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,oBACID,OAAA;IAAIE,EAAE,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAEpC,CAAC;AAAAC,EAAA,GAJKP,SAAS;AAKf,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}