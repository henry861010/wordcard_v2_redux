{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst server = axios.create({\n  baseURL: \"http://127.0.0.1:7001/words\"\n});\nconst initWords = [{\n  id: 0,\n  name: \"apple\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}, {\n  id: 1,\n  name: \"apple1\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [true, false, false, false]\n}, {\n  id: 2,\n  name: \"appl2\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}, {\n  id: 3,\n  name: \"apple3\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, false, true, false]\n}, {\n  id: 4,\n  name: \"apple4\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, false, false, true]\n}, {\n  id: 5,\n  name: \"apple5\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}];\nconst initialState = {\n  words: [],\n  status: \"pending\",\n  //pending, fullfilled, error \n  error: null\n};\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () => {\n  try {\n    console.log(\"begin!!!\");\n    const response = await axios.get(\"http://127.0.0.1:7001/words\");\n    console.log(\"get the result!!!\");\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const addNewWord = createAsyncThunk(\"words/addNewWord\", async newWord => {\n  try {\n    const response = await server.post(\"/words\", newWord);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const editNewWord = createAsyncThunk('words/editNewPost', async newWord => {\n  const {\n    id\n  } = newWord;\n  try {\n    const response = await axios.put(`/words/${id}`, newWord);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const deleteNewWord = createAsyncThunk('words/deleteNewPost', async newWord => {\n  const {\n    id\n  } = newWord;\n  try {\n    const response = await axios.delete(`/words/${id}`);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst wordsSlice = createSlice({\n  name: 'words',\n  initialState,\n  reducers: {\n    addWord: {\n      reducer(state, action) {\n        let id = state.words.length;\n        action.payload.id = id;\n        state.words.push(action.payload);\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    editWord: {\n      reducer(state, action) {\n        const id = action.payload.id;\n        const newWord = action.payload;\n        const newWords = state.words.map((word, index) => index === id ? newWord : word);\n        state.words = newWords;\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    deleteWord: {\n      reducer(state, action) {\n        //create new words, beacuse the id of each wor will be redefined\n        const oldWords = state.words;\n        const newWords = oldWords.map(item => item.id === action.id ? null : item).filter(Boolean);\n        state.words = newWords;\n      },\n      prepare(id) {\n        return {\n          payload: {\n            id: id\n          }\n        };\n      }\n    }\n  },\n  extraReduces(build) {\n    build.addCase(fetchWords.pending, (state, action) => {\n      state.status = \"pending\";\n    }).addCase(fetchWords.fulfilled, (state, action) => {\n      console.log(\"fulfilled\");\n      state.words = action.payload;\n      state.status = \"fulfilled\";\n    }).addCase(fetchWords.rejected, (state, action) => {\n      state.words = action.payload.message;\n      state.status = \"error\";\n    }).addCase(addNewWord.fulfilled, (state, action) => {\n      state.words.push(action.payload);\n    }).addCase(editNewWord.fulfilled, (state, action) => {\n      const newWord = action.payload;\n      const newWords = state.words.map((word, index) => index === action.payload.id ? newWord : word);\n      state.words = newWords;\n    }).addCase(deleteNewWord.fulfilled, (state, action) => {\n      const oldWords = state.words;\n      const newWords = oldWords.map(item => item.id === action.payload.id ? null : item).filter(Boolean); //filter() allow!!!\n      state.words = newWords;\n    });\n  }\n});\nexport const {\n  addWord,\n  editWord,\n  deleteWord\n} = wordsSlice.actions;\nexport const selectorWords = state => state.words.words;\nexport const selectorWordByID = (state, id) => state.words.words.find(word => String(word.id) === String(id));\nexport const selectorStatus = state => state.words.status;\nexport const selectorError = state => state.words.error;\nexport default wordsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","server","create","baseURL","initWords","id","name","pronounce","descriptions","meaning","type1","examples","type2","initialState","words","status","error","fetchWords","console","log","response","get","data","err","message","addNewWord","newWord","post","editNewWord","put","deleteNewWord","delete","wordsSlice","reducers","addWord","reducer","state","action","length","payload","push","prepare","editWord","newWords","map","word","index","deleteWord","oldWords","item","filter","Boolean","extraReduces","build","addCase","pending","fulfilled","rejected","actions","selectorWords","selectorWordByID","find","String","selectorStatus","selectorError"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\nconst server = axios.create({baseURL:\"http://127.0.0.1:7001/words\"})\n\nconst initWords = [\n        {\n            id: 0,\n            name: \"apple\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        },\n        {\n            id: 1,\n            name: \"apple1\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[true, false, false, false],\n        },\n        {\n            id: 2,\n            name: \"appl2\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        },\n        {\n            id: 3,\n            name: \"apple3\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, false, true, false],\n        },\n        {\n            id: 4,\n            name: \"apple4\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, false, false, true],\n        },\n        {\n            id: 5,\n            name: \"apple5\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        }\n];\n\nconst initialState = {\n    words: [],\n    status: \"pending\",  //pending, fullfilled, error \n    error: null\n}\n\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () =>{\n    try {    \n        console.log(\"begin!!!\");\n        const response = await axios.get(\"http://127.0.0.1:7001/words\");\n        console.log(\"get the result!!!\");\n        return response.data;\n    } catch (err) {\n        return err.message;\n    }\n});\n\nexport const addNewWord = createAsyncThunk(\"words/addNewWord\", async (newWord) =>{\n    try {\n        const response = await server.post(\"/words\", newWord)\n        return response.data;\n    } catch (err) {\n        return err.message;\n    }\n});\n\nexport const editNewWord = createAsyncThunk('words/editNewPost', async (newWord) => {\n    const { id } = newWord;\n    try {\n        const response = await axios.put(`/words/${id}`, newWord)\n        return response.data\n    } catch (err) {\n        return err.message;\n    }\n})\n\nexport const deleteNewWord = createAsyncThunk('words/deleteNewPost', async (newWord) => {\n    const { id } = newWord;\n    try {\n        const response = await axios.delete(`/words/${id}`)\n        return response.data\n    } catch (err) {\n        return err.message;\n    }\n})\n\nconst wordsSlice = createSlice({\n    name: 'words',\n    initialState,\n    reducers:{\n        addWord: {\n            reducer(state, action){\n                let id = state.words.length;\n                action.payload.id = id;\n                state.words.push(action.payload);\n            },\n            prepare( id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        editWord: {\n            reducer(state, action){\n                const id = action.payload.id;\n                const newWord = action.payload;\n                const newWords = state.words.map((word, index) => (\n                    index===id?newWord:word\n                ));\n                state.words = newWords;\n            },\n            prepare(id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        deleteWord: {\n            reducer(state, action){\n                //create new words, beacuse the id of each wor will be redefined\n                const oldWords = state.words;\n                const newWords = oldWords.map((item)=>(item.id===action.id?null:item)).filter(Boolean);\n                state.words = newWords;\n            },\n            prepare(id){\n                return{\n                    payload:{\n                        id: id\n                    }\n                }\n            }\n        }\n    },\n    extraReduces(build){\n        build\n            .addCase(fetchWords.pending,(state, action) => {\n                state.status = \"pending\";\n            })\n            .addCase(fetchWords.fulfilled,(state, action) => {\n                console.log(\"fulfilled\");\n                state.words = action.payload;\n                state.status = \"fulfilled\";\n            })\n            .addCase(fetchWords.rejected,(state, action) => {\n                state.words = action.payload.message;\n                state.status = \"error\";\n            })\n            .addCase(addNewWord.fulfilled,(state, action) => {\n                state.words.push(action.payload);\n            })\n            .addCase(editNewWord.fulfilled,(state, action) => {\n                const newWord = action.payload;\n                const newWords = state.words.map((word, index) => (\n                    index===action.payload.id?newWord:word\n                ));\n                state.words = newWords;\n            })\n            .addCase(deleteNewWord.fulfilled,(state, action) => {\n                const oldWords = state.words;\n                const newWords = oldWords.map((item)=>(item.id===action.payload.id?null:item)).filter(Boolean);  //filter() allow!!!\n                state.words = newWords;\n            })\n    }\n});\n\nexport const {addWord, editWord, deleteWord} = wordsSlice.actions;\nexport const selectorWords = (state) => (state.words.words);\nexport const selectorWordByID = (state, id) =>\n    state.words.words.find((word) => String(word.id) === String(id))\nexport const selectorStatus = (state) => (state.words.status);\nexport const selectorError = (state) => (state.words.error);\nexport default wordsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}