{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst server = axios.create({\n  baseURL: \"HTTPS://127.0.0.1:7001\"\n});\nconst initWords = [{\n  id: 0,\n  name: \"apple\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}, {\n  id: 1,\n  name: \"apple1\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [true, false, false, false]\n}, {\n  id: 2,\n  name: \"appl2\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}, {\n  id: 3,\n  name: \"apple3\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, false, true, false]\n}, {\n  id: 4,\n  name: \"apple4\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, false, false, true]\n}, {\n  id: 5,\n  name: \"apple5\",\n  pronounce: \"[apple]\",\n  descriptions: [{\n    meaning: \"a fruit\",\n    type1: \"n\",\n    examples: [\"an apple a day, leave doctor away\", \"i like apple\"]\n  }, {\n    meaning: \"red\",\n    type1: \"adj\",\n    examples: [\"she is so apple\", \"apple~~~\"]\n  }],\n  type1: [true, false, false, false],\n  type2: [false, true, false, false]\n}];\nconst initialState = {\n  words: initWords,\n  status: \"fullfilled\",\n  //pending, fullfilled, error \n  error: null\n};\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () => {\n  const response = await server.get(\"/words\");\n  return response;\n});\nconst wordsSlice = createSlice({\n  name: 'words',\n  initialState,\n  reducers: {\n    addWord: {\n      reducer(state, action) {\n        let id = state.words.length;\n        action.payload.id = id;\n        state.words.push(action.payload);\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    editWord: {\n      reducer(state, action) {\n        const id = action.payload.id;\n        const newWord = action.payload;\n        const newWords = state.words.map((word, index) => index === id ? newWord : word);\n        state.words = newWords;\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    deleteWord: {\n      reducer(state, action) {\n        //create new words, beacuse the id of each wor will be redefined\n        const oldWords = state.words;\n        const newWords = oldWords.map(item => item.id === action.id ? null : item).filter(Boolean);\n        state.words = newWords;\n      },\n      prepare(id) {\n        return {\n          payload: {\n            id: id\n          }\n        };\n      }\n    }\n  },\n  extraReduces(build) {\n    build.addCase(fetchWords.pending, (state, action) => {\n      state.words.status = \"pending\";\n    }).addCase(fetchWords.fulfilled, (state, action) => {\n      state.words.words = action.payload;\n      state.words.status = \"fulfilled\";\n    }).addCase(fetchWords.rejected, (state, action) => {\n      state.words.words = action.payload.message;\n      state.words.status = \"error\";\n    });\n  }\n});\nexport const {\n  addWord,\n  editWord,\n  deleteWord\n} = wordsSlice.actions;\nexport const selectorWords = state => state.words.words;\nexport const selectorWordByID = (state, id) => state.words.words.find(word => String(word.id) === String(id));\nexport const selectorStatus = state => state.words.status;\nexport const selectorsError = state => state.words.error;\nexport default wordsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","server","create","baseURL","initWords","id","name","pronounce","descriptions","meaning","type1","examples","type2","initialState","words","status","error","fetchWords","response","get","wordsSlice","reducers","addWord","reducer","state","action","length","payload","push","prepare","editWord","newWord","newWords","map","word","index","deleteWord","oldWords","item","filter","Boolean","extraReduces","build","addCase","pending","fulfilled","rejected","message","actions","selectorWords","selectorWordByID","find","String","selectorStatus","selectorsError"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\nconst server = axios.create({baseURL:\"HTTPS://127.0.0.1:7001\"})\n\nconst initWords = [\n        {\n            id: 0,\n            name: \"apple\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        },\n        {\n            id: 1,\n            name: \"apple1\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[true, false, false, false],\n        },\n        {\n            id: 2,\n            name: \"appl2\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        },\n        {\n            id: 3,\n            name: \"apple3\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, false, true, false],\n        },\n        {\n            id: 4,\n            name: \"apple4\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, false, false, true],\n        },\n        {\n            id: 5,\n            name: \"apple5\",\n            pronounce: \"[apple]\",\n            descriptions: [\n                {\n                    meaning: \"a fruit\",\n                    type1: \"n\",\n                    examples: [\"an apple a day, leave doctor away\",\"i like apple\"]\n                },\n                {\n                    meaning: \"red\",\n                    type1: \"adj\",\n                    examples: [\"she is so apple\",\"apple~~~\"]\n                }\n            ],\n            type1:[true, false, false, false],\n            type2:[false, true, false, false],\n        }\n];\n\nconst initialState = {\n    words: initWords,\n    status: \"fullfilled\",  //pending, fullfilled, error \n    error: null\n}\n\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () =>{\n    const response = await server.get(\"/words\")\n    return response;\n});\n\nconst wordsSlice = createSlice({\n    name: 'words',\n    initialState,\n    reducers:{\n        addWord: {\n            reducer(state, action){\n                let id = state.words.length;\n                action.payload.id = id;\n                state.words.push(action.payload);\n            },\n            prepare( id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        editWord: {\n            reducer(state, action){\n                const id = action.payload.id;\n                const newWord = action.payload;\n                const newWords = state.words.map((word, index) => (\n                    index===id?newWord:word\n                ));\n                state.words = newWords;\n            },\n            prepare(id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        deleteWord: {\n            reducer(state, action){\n                //create new words, beacuse the id of each wor will be redefined\n                const oldWords = state.words;\n                const newWords = oldWords.map((item)=>(item.id===action.id?null:item)).filter(Boolean);\n                state.words = newWords;\n            },\n            prepare(id){\n                return{\n                    payload:{\n                        id: id\n                    }\n                }\n            }\n        }\n    },\n    extraReduces(build){\n        build\n            .addCase(fetchWords.pending,(state, action) => {\n                state.words.status = \"pending\";\n            })\n            .addCase(fetchWords.fulfilled,(state, action) => {\n                state.words.words = action.payload;\n                state.words.status = \"fulfilled\";\n            })\n            .addCase(fetchWords.rejected,(state, action) => {\n                state.words.words = action.payload.message;\n                state.words.status = \"error\";\n            })\n    }\n});\n\nexport const {addWord, editWord, deleteWord} = wordsSlice.actions;\nexport const selectorWords = (state) => (state.words.words);\nexport const selectorWordByID = (state, id) =>\n    state.words.words.find((word) => String(word.id) === String(id))\nexport const selectorStatus = (state) => (state.words.status);\nexport const selectorsError = (state) => (state.words.error);\nexport default wordsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}