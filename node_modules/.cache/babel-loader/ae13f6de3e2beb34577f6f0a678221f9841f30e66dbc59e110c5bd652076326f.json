{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/searchBar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords } from \"./wordsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setSelectedWords\n}) => {\n  _s();\n  const type1 = useSelector(selectorType1);\n  const type2 = useSelector(selectorType2);\n  const words = useSelector(selectorWords);\n  const [selectedType1, setSelectedType1] = useState(type1.map(item => true));\n  const [selectedType2, setSelectedType2] = useState(type2.map(item => true));\n  const [selectedsection, setSelectedsection] = useState(\"\");\n  useEffect(() => {\n    const newSelectedWords = words.map((item, index) => {\n      let ifSection = true;\n      let ifType1 = false;\n      let ifType2 = false;\n      //section\n      ifSection = item.name.includes(selectedsection);\n      //type1\n      selectedType1.map((ifType, index) => {\n        if (ifType && item.type1[index]) ifType1 = true;\n      });\n      //type2\n      selectedType2.map((ifType, index) => {\n        if (ifType && item.type2[index]) ifType2 = true;\n      });\n      if (ifType1 && ifType2 && ifSection) return item;else return null;\n    }).filter(Boolean);\n    setSelectedWords(newSelectedWords);\n  }, [selectedType1, selectedType2, selectedsection]);\n  const changeSelectedType1 = e => {\n    const id = e.target.value;\n    const checked = e.target.checked;\n    const newSelectedType1 = selectedType1.map((item, index) => index === id ? checked : item);\n    selectedType1.map((item, index) => {\n      if (String(index) === id) console.log(\"shooting\" + \"  id+\" + id + \" index:\" + index);\n    });\n    newSelectedType1.map(item => {\n      if (item) console.log(\"true\");else console.log(\"false\");\n    });\n    console.log(\"-----\" + \"   cheched:\" + checked + \"  id:\" + id);\n    setSelectedType1(newSelectedType1);\n  };\n  const changeSelectedType2 = e => {\n    const id = e.target.value.id;\n    const checked = e.target.checked;\n    const newSelectedType2 = selectedType2.map((item, index) => index === id ? checked : item);\n    setSelectedType2(newSelectedType2);\n  };\n  const changeselectedsection = e => {\n    const section = e.target.value;\n    setSelectedsection(section);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchWord\",\n      children: \"search word:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchWord\",\n      type: \"text\",\n      role: \"searchbox\",\n      placeholder: \"Search Items\",\n      value: selectedsection,\n      onChange: changeselectedsection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchType1\",\n      children: \"search type1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"searchType1\",\n      children: type1.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `searchBar${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `searchBar${item.type}`,\n          type: \"checkbox\",\n          value: index,\n          checked: selectedType1[index],\n          onClick: changeSelectedType1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, `type1${item.type}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchType2\",\n      children: \"search type1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"searchType2\",\n      children: type2.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `searchBar${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `searchBar${item.type}`,\n          type: \"checkbox\",\n          value: index,\n          checked: selectedType1[index],\n          onClick: changeSelectedType2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, `type2${item.type}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchBar, \"zsoxaeY9MIFSov/JqNa3mdGDiOw=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useEffect","useSelector","selectorType1","selectorType2","selectorWords","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","setSelectedWords","_s","type1","type2","words","selectedType1","setSelectedType1","map","item","selectedType2","setSelectedType2","selectedsection","setSelectedsection","newSelectedWords","index","ifSection","ifType1","ifType2","name","includes","ifType","filter","Boolean","changeSelectedType1","e","id","target","value","checked","newSelectedType1","String","console","log","changeSelectedType2","newSelectedType2","changeselectedsection","section","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","role","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/searchBar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords } from \"./wordsSlice\";\n\n\nconst SearchBar = ({ setSelectedWords }) => {\n    const type1 = useSelector(selectorType1);\n    const type2 = useSelector(selectorType2);\n    const words = useSelector(selectorWords);\n\n    const [ selectedType1 , setSelectedType1 ] = useState(type1.map(item=>true));\n    const [ selectedType2 , setSelectedType2 ] = useState(type2.map(item=>true));\n    const [ selectedsection , setSelectedsection ] = useState(\"\");\n\n    useEffect(() => {\n        const newSelectedWords = words.map((item, index)=>{\n            let ifSection = true;\n            let ifType1 = false;\n            let ifType2 = false;\n            //section\n            ifSection = item.name.includes(selectedsection);\n            //type1\n            selectedType1.map((ifType, index) => {\n                if( ifType && item.type1[index] ) ifType1 = true;\n            });\n            //type2\n            selectedType2.map((ifType, index) => {\n                if( ifType && item.type2[index] ) ifType2 = true;\n            });\n\n            if( ifType1 && ifType2 &&  ifSection) return item;\n            else return null\n        }).filter(Boolean);\n        setSelectedWords(newSelectedWords);\n    },[selectedType1, selectedType2, selectedsection])\n\n    const changeSelectedType1 = (e) => {\n        const id = e.target.value;\n        const checked = e.target.checked;\n        const newSelectedType1 = selectedType1.map((item, index)=>(index===id?checked:item));\nselectedType1.map((item,index)=>{\n    if(String(index)===id) console.log(\"shooting\"+\"  id+\"+id+\" index:\"+index)\n});   \nnewSelectedType1.map((item)=>{\n    if(item) console.log(\"true\")\n    else console.log(\"false\")\n});\nconsole.log(\"-----\"+\"   cheched:\"+checked+\"  id:\"+id)\n        setSelectedType1(newSelectedType1);\n    }\n\n    const changeSelectedType2 = (e) => {\n        const id = e.target.value.id;\n        const checked = e.target.checked;\n        const newSelectedType2 = selectedType2.map((item, index)=>(index===id?checked:item));\n        setSelectedType2(newSelectedType2);\n    }\n\n    const changeselectedsection = (e) => {\n        const section = e.target.value;\n        setSelectedsection(section);\n    }\n\n    return(\n        <>\n            <label htmlFor=\"searchWord\">search word:</label>\n            <input\n                id='searchWord'\n                type='text'\n                role='searchbox'\n                placeholder='Search Items'\n                value={selectedsection}\n                onChange={changeselectedsection}\n            />\n\n            <label htmlFor=\"searchType1\">search type1:</label>\n            <ul id=\"searchType1\">{\n                type1.map((item,index) => (\n                    <li key={`type1${item.type}`}>\n                        <label htmlFor={`searchBar${item.type}`}>{item.type}</label>\n                        <input\n                            id={`searchBar${item.type}`}\n                            type=\"checkbox\"\n                            value={index}\n                            checked={selectedType1[index]}\n                            onClick={changeSelectedType1}\n                        />\n                    </li>\n                ))\n            }</ul>\n\n            <label htmlFor=\"searchType2\">search type1:</label>\n            <ul id=\"searchType2\">{\n                type2.map((item,index) => (\n                    <li key={`type2${item.type}`}>\n                        <label htmlFor={`searchBar${item.type}`}>{item.type}</label>\n                        <input\n                            id={`searchBar${item.type}`}\n                            type=\"checkbox\"\n                            value={index}\n                            checked={selectedType1[index]}\n                            onClick={changeSelectedType2}\n                        />\n                    </li>\n                ))\n            }</ul>\n        </>\n    ); \n}\nexport default SearchBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}