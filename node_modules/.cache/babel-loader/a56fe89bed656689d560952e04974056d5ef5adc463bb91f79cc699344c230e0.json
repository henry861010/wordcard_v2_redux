{"ast":null,"code":"var _jsxFileName = \"/home/henry/react/wordcard_v2_redux/src/features/words/searchBar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords } from \"./wordsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setSelectedWords\n}) => {\n  _s();\n  const type1 = useSelector(selectorType1);\n  const type2 = useSelector(selectorType2);\n  const words = useSelector(selectorWords);\n  const [selectedType1, setSelectedType1] = useState(type1.map(item => true));\n  const [selectedType2, setSelectedType2] = useState(type2.map(item => true));\n  const [selectedsection, setSelectedsection] = useState(\"\");\n  useEffect(() => {\n    const newSelectedWords = words.map((item, index) => {\n      let ifSection = true;\n      let ifType1 = false;\n      let ifType2 = false;\n      //section\n      ifSection = item.name.includes(selectedsection);\n      //type1\n      selectedType1.map((ifType, index) => {\n        if (ifType && item.type1[index]) ifType1 = true;\n      });\n      //type2\n      selectedType2.map((ifType, index) => {\n        if (ifType && item.type2[index]) ifType2 = true;\n      });\n      if (ifType1 && ifType2 && ifSection) return item;else return null;\n    }).filter(Boolean);\n    setSelectedWords(newSelectedWords);\n  }, [selectedType1, selectedType2, selectedsection, words]);\n  const changeSelectedType1 = e => {\n    const id = e.target.value;\n    const checked = e.target.checked;\n    const newSelectedType1 = selectedType1.map((item, index) => String(index) === id ? checked : item);\n    setSelectedType1(newSelectedType1);\n  };\n  const changeSelectedType2 = e => {\n    const id = e.target.value;\n    const checked = e.target.checked;\n    const newSelectedType2 = selectedType2.map((item, index) => String(index) === id ? checked : item);\n    setSelectedType2(newSelectedType2);\n  };\n  const changeselectedsection = e => {\n    const section = e.target.value;\n    setSelectedsection(section);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchWord\",\n      children: \"search word:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchWord\",\n      type: \"text\",\n      role: \"searchbox\",\n      placeholder: \"Search Items\",\n      value: selectedsection,\n      onChange: changeselectedsection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"search type1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"searchType1\",\n      children: type1.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `searchBar${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `searchBar${item.type}`,\n          type: \"checkbox\",\n          value: index,\n          checked: selectedType1[index],\n          onClick: changeSelectedType1,\n          onChange: e => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), \" \"]\n      }, `type1${item.type}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"search type2:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"searchType2\",\n      children: type2.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `searchBar${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `searchBar${item.type}`,\n          type: \"checkbox\",\n          value: index,\n          checked: selectedType2[index],\n          onClick: changeSelectedType2,\n          onChange: e => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), \" \"]\n      }, `type2${item.type}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"zsoxaeY9MIFSov/JqNa3mdGDiOw=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useEffect","useSelector","selectorType1","selectorType2","selectorWords","jsxDEV","_jsxDEV","SearchBar","setSelectedWords","_s","type1","type2","words","selectedType1","setSelectedType1","map","item","selectedType2","setSelectedType2","selectedsection","setSelectedsection","newSelectedWords","index","ifSection","ifType1","ifType2","name","includes","ifType","filter","Boolean","changeSelectedType1","e","id","target","value","checked","newSelectedType1","String","changeSelectedType2","newSelectedType2","changeselectedsection","section","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","role","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/henry/react/wordcard_v2_redux/src/features/words/searchBar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords } from \"./wordsSlice\";\n\n\nconst SearchBar = ({ setSelectedWords }) => {\n    const type1 = useSelector(selectorType1);\n    const type2 = useSelector(selectorType2);\n    const words = useSelector(selectorWords);\n\n    const [ selectedType1 , setSelectedType1 ] = useState(type1.map(item=>true));\n    const [ selectedType2 , setSelectedType2 ] = useState(type2.map(item=>true));\n    const [ selectedsection , setSelectedsection ] = useState(\"\");\n\n    useEffect(() => {\n        const newSelectedWords = words.map((item, index)=>{\n            let ifSection = true;\n            let ifType1 = false;\n            let ifType2 = false;\n            //section\n            ifSection = item.name.includes(selectedsection);\n            //type1\n            selectedType1.map((ifType, index) => {\n                if( ifType && item.type1[index] ) ifType1 = true;\n            });\n            //type2\n            selectedType2.map((ifType, index) => {\n                if( ifType && item.type2[index] ) ifType2 = true;\n            });\n            if( ifType1 && ifType2 &&  ifSection) return item;\n            else return null\n        }).filter(Boolean);\n        setSelectedWords(newSelectedWords);\n    },[selectedType1, selectedType2, selectedsection, words])\n\n    const changeSelectedType1 = (e) => {\n        const id = e.target.value;\n        const checked = e.target.checked;\n        const newSelectedType1 = selectedType1.map((item, index)=>(String(index)===id?checked:item));\n        setSelectedType1(newSelectedType1);\n    }\n\n    const changeSelectedType2 = (e) => {\n        const id = e.target.value;\n        const checked = e.target.checked;\n        const newSelectedType2 = selectedType2.map((item, index)=>(String(index)===id?checked:item));\n        setSelectedType2(newSelectedType2);\n    }\n\n    const changeselectedsection = (e) => {\n        const section = e.target.value;\n        setSelectedsection(section);\n    }\n\n    return(\n        <div className=\"SearchBar\">\n            <label htmlFor=\"searchWord\">search word:</label>\n            <input\n                id='searchWord'\n                type='text'\n                role='searchbox'\n                placeholder='Search Items'\n                value={selectedsection}\n                onChange={changeselectedsection}\n            /><br/>\n\n            <p>search type1:</p>\n            <ul id=\"searchType1\">{\n                type1.map((item,index) => (\n                    <li key={`type1${item.type}`}>\n                        <label htmlFor={`searchBar${item.type}`}>{item.type}</label>\n                        <input\n                            id={`searchBar${item.type}`}\n                            type=\"checkbox\"\n                            value={index}\n                            checked={selectedType1[index]}\n                            onClick={changeSelectedType1}\n                            onChange={e => {}}\n                        /> {/*can avoid onChange={e => {}}? https://www.google.com/search?q=The+label%27s+for+attribute+doesn%27t+match+any+element+id.+This+might+prevent+the+browser+from+correctly+autofilling+the+form+and+accessibility+tools+from+working+correctly.+To+fix+this+issue%2C+make+sure+the+label%27s+for+attribute+references+the+correct+id+of+a+form+field.&oq=The+label%27s+for+attribute+doesn%27t+match+any+element+id.+This+might+prevent+the+browser+from+correctly+autofilling+the+form+and+accessibility+tools+from+working+correctly.+To+fix+this+issue%2C+make+sure+the+label%27s+for+attribute+references+the+correct+id+of+a+form+field.&aqs=chrome..69i57.661j0j7&sourceid=chrome&ie=UTF-8 */}\n                    </li>\n                ))\n            }</ul>\n\n            <p>search type2:</p>\n            <ul id=\"searchType2\">{\n                type2.map((item,index) => (\n                    <li key={`type2${item.type}`}>\n                        <label htmlFor={`searchBar${item.type}`}>{item.type}</label>\n                        <input\n                            id={`searchBar${item.type}`}\n                            type=\"checkbox\"\n                            value={index}\n                            checked={selectedType2[index]}\n                            onClick={changeSelectedType2}\n                            onChange={e => {}}\n                        /> {/*can avoid onChange={e => {}}? https://www.google.com/search?q=The+label%27s+for+attribute+doesn%27t+match+any+element+id.+This+might+prevent+the+browser+from+correctly+autofilling+the+form+and+accessibility+tools+from+working+correctly.+To+fix+this+issue%2C+make+sure+the+label%27s+for+attribute+references+the+correct+id+of+a+form+field.&oq=The+label%27s+for+attribute+doesn%27t+match+any+element+id.+This+might+prevent+the+browser+from+correctly+autofilling+the+form+and+accessibility+tools+from+working+correctly.+To+fix+this+issue%2C+make+sure+the+label%27s+for+attribute+references+the+correct+id+of+a+form+field.&aqs=chrome..69i57.661j0j7&sourceid=chrome&ie=UTF-8 */}\n                    </li>\n                ))\n            }</ul>\n        </div>\n    ); \n}\nexport default SearchBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}