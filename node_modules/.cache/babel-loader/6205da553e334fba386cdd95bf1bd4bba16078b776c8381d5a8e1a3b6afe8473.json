{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\nimport { selectorStatus } from \"./wordsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wordslist = () => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const status = useSelector(selectorStatus);\n  let content;\n  if (status === \"pending\") {\n    content = /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"loading\",\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 18\n    }, this);\n  } else if (status === \"fullfilled\") {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"show\",\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        setSelectedWords: setSelectedWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ShowWords, {\n        selectedWords: selectedWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"error\",\n      children: \"error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this);\n  }\n  return content;\n};\n_s(Wordslist, \"EbRbSmTzHpisG7PZWwAPSm9lwh8=\", false, function () {\n  return [useSelector];\n});\n_c = Wordslist;\nexport default Wordslist;\nvar _c;\n$RefreshReg$(_c, \"Wordslist\");","map":{"version":3,"names":["useState","useSelector","SearchBar","ShowWords","selectorStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","Wordslist","_s","selectedWords","setSelectedWords","status","content","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\n\nimport { selectorStatus } from \"./wordsSlice\";\n\nconst Wordslist = () => {\n    const [ selectedWords , setSelectedWords ] = useState([]);\n    const status = useSelector(selectorStatus);\n\n    let content;\n    if(status===\"pending\"){\n        content =<h2 id=\"loading\">loading</h2>\n    }\n    else if(status===\"fullfilled\"){\n        content =\n        <>\n            <h2 id=\"show\">show</h2>\n            <SearchBar setSelectedWords={setSelectedWords}/>\n            <ShowWords selectedWords={selectedWords}/>\n        </>\n    }\n    else{\n        content = <h2 id=\"error\">error!</h2>\n    }\n    return content\n}\nexport default Wordslist"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAEnC,SAASC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAAEC,aAAa,EAAGC,gBAAgB,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAMa,MAAM,GAAGZ,WAAW,CAACG,cAAc,CAAC;EAE1C,IAAIU,OAAO;EACX,IAAGD,MAAM,KAAG,SAAS,EAAC;IAClBC,OAAO,gBAAER,OAAA;MAAIS,EAAE,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1C,CAAC,MACI,IAAGP,MAAM,KAAG,YAAY,EAAC;IAC1BC,OAAO,gBACPR,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACIV,OAAA;QAAIS,EAAE,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBd,OAAA,CAACJ,SAAS;QAACU,gBAAgB,EAAEA;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDd,OAAA,CAACH,SAAS;QAACQ,aAAa,EAAEA;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAC5C,CAAC;EACP,CAAC,MACG;IACAN,OAAO,gBAAGR,OAAA;MAAIS,EAAE,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACxC;EACA,OAAON,OAAO;AAClB,CAAC;AAAAJ,EAAA,CApBKD,SAAS;EAAA,QAEIR,WAAW;AAAA;AAAAoB,EAAA,GAFxBZ,SAAS;AAqBf,eAAeA,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}