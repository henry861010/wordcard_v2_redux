{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initTyp2 = [{\n  id: 0,\n  type: \"fruit\",\n  description: \"can eat\"\n}, {\n  id: 1,\n  type: \"person\",\n  description: \"person\"\n}, {\n  id: 2,\n  type: \"country\",\n  description: \"country\"\n}, {\n  id: 3,\n  type: \"color\",\n  description: \"color\"\n}];\nconst initTyp1 = [{\n  id: 0,\n  type: \"n.\",\n  description: \"can eat\"\n}, {\n  id: 1,\n  type: \"adj.\",\n  description: \"person\"\n}, {\n  id: 2,\n  type: \"v.\",\n  description: \"country\"\n}, {\n  id: 3,\n  type: \"adv.\",\n  description: \"color\"\n}];\nconst initValue = {\n  type1: initTyp1,\n  type2: initTyp2\n};\nconst typeSlice = createSlice({\n  name: \"type\",\n  initValue,\n  reducers: {\n    addtype: {\n      reducer(state, action) {\n        let newType = action.payload;\n        newType.id = state.type2.lenght;\n        state.push(newType);\n      },\n      prepare(type, description) {\n        return {\n          payload: {\n            type: type,\n            description: description\n          }\n        };\n      }\n    }\n  }\n});\nexport default typeSlice.reducer;\nexport const {\n  addType\n} = type2Slice.actions;\nexport const selectorType1 = state => state.type.type1;\nexport const selectorType2 = state => state.type.type2;","map":{"version":3,"names":["createSlice","initTyp2","id","type","description","initTyp1","initValue","type1","type2","typeSlice","name","reducers","addtype","reducer","state","action","newType","payload","lenght","push","prepare","addType","type2Slice","actions","selectorType1","selectorType2"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/type/typeSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n\nconst initTyp2 = [\n    {\n        id: 0,\n        type: \"fruit\",\n        description: \"can eat\",\n    },\n    {\n        id: 1,\n        type: \"person\",\n        description: \"person\",\n    },\n    {\n        id: 2,\n        type: \"country\",\n        description: \"country\",\n    },\n    {\n        id: 3,\n        type: \"color\",\n        description: \"color\",\n    }\n];\n\nconst initTyp1 = [\n    {\n        id: 0,\n        type: \"n.\",\n        description: \"can eat\",\n    },\n    {\n        id: 1,\n        type: \"adj.\",\n        description: \"person\",\n    },\n    {\n        id: 2,\n        type: \"v.\",\n        description: \"country\",\n    },\n    {\n        id: 3,\n        type: \"adv.\",\n        description: \"color\",\n    }\n];\n\nconst initValue = {\n    type1: initTyp1,\n    type2: initTyp2\n};\n\nconst typeSlice = createSlice({\n    name: \"type\",\n    initValue,\n    reducers: {\n        addtype: {\n            reducer(state, action){\n                let newType = action.payload;\n                newType.id = state.type2.lenght;\n                state.push(newType);\n            },\n            prepare(type, description){\n                return{\n                    payload: {\n                        type: type,\n                        description: description\n                    }\n                }\n            }\n        }\n    }\n});\n\nexport default typeSlice.reducer;\nexport const {addType} = type2Slice.actions;\nexport const selectorType1 = (state) => (state.type.type1);\nexport const selectorType2 = (state) => (state.type.type2);"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,QAAQ,GAAG,CACb;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE;AACjB,CAAC,CACJ;AAED,MAAMC,QAAQ,GAAG,CACb;EACIH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,IAAI;EACVC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,IAAI;EACVC,WAAW,EAAE;AACjB,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE;AACjB,CAAC,CACJ;AAED,MAAME,SAAS,GAAG;EACdC,KAAK,EAAEF,QAAQ;EACfG,KAAK,EAAEP;AACX,CAAC;AAED,MAAMQ,SAAS,GAAGT,WAAW,CAAC;EAC1BU,IAAI,EAAE,MAAM;EACZJ,SAAS;EACTK,QAAQ,EAAE;IACNC,OAAO,EAAE;MACLC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;QAClB,IAAIC,OAAO,GAAGD,MAAM,CAACE,OAAO;QAC5BD,OAAO,CAACd,EAAE,GAAGY,KAAK,CAACN,KAAK,CAACU,MAAM;QAC/BJ,KAAK,CAACK,IAAI,CAACH,OAAO,CAAC;MACvB,CAAC;MACDI,OAAOA,CAACjB,IAAI,EAAEC,WAAW,EAAC;QACtB,OAAM;UACFa,OAAO,EAAE;YACLd,IAAI,EAAEA,IAAI;YACVC,WAAW,EAAEA;UACjB;QACJ,CAAC;MACL;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeK,SAAS,CAACI,OAAO;AAChC,OAAO,MAAM;EAACQ;AAAO,CAAC,GAAGC,UAAU,CAACC,OAAO;AAC3C,OAAO,MAAMC,aAAa,GAAIV,KAAK,IAAMA,KAAK,CAACX,IAAI,CAACI,KAAM;AAC1D,OAAO,MAAMkB,aAAa,GAAIX,KAAK,IAAMA,KAAK,CAACX,IAAI,CAACK,KAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}