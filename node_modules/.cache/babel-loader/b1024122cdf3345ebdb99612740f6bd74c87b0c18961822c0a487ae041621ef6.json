{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/addDescription.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddDescription = ({\n  id,\n  descriptions,\n  setDescriptions\n}) => {\n  const meaning = descriptions[id].meaning;\n  const type1 = descriptions[id].type1;\n  const examples = descriptions[id].examples;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addDescription-meaning\",\n      children: \"name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"addDescription-meaning\",\n      placeholder: \"what's the meaning of word?\",\n      value: meaning,\n      onChange: e => setDescriptions(descriptions.map((item, index) => index === id ? {\n        ...item,\n        meaning: e.target.value\n      } : item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addDescription-type1\",\n      children: \"name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"addDescription-type1\",\n      value: type1,\n      onChange: e => setDescriptions(descriptions.map((item, index) => index === id ? {\n        ...item,\n        type1: e.target.value\n      } : item)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"n.\",\n        children: \"n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"v.\",\n        children: \"v.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"adj.\",\n        children: \"adj.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"adv.\",\n        children: \"adv.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: examples.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `addDescription-example${index}`,\n          children: [\"example\", index, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: `addDescription-example${index}`,\n          placeholder: \"what's the example of word?\",\n          value: item,\n          onChange: e => {\n            const newExamples = examples.map((example, exampleIndex) => index === exampleIndex ? e.target.value : example);\n            const newDescriptionOfID = {\n              ...descriptions[id],\n              examples: newExamples\n            };\n            setDescriptions(descriptions.map((description, descriptionIndex) => descriptionIndex === id ? newDescriptionOfID : description));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const newExamples = [...examples, \"\"];\n        const newDescriptionOfID = {\n          ...descriptions[id],\n          examples: newExamples\n        };\n        setDescriptions(descriptions.map((item, index) => index === id ? newDescriptionOfID : item));\n      },\n      children: \"Add example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = AddDescription;\nexport default AddDescription;\nvar _c;\n$RefreshReg$(_c, \"AddDescription\");","map":{"version":3,"names":["AddDescription","id","descriptions","setDescriptions","meaning","type1","examples","_jsxDEV","_Fragment","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","map","item","index","target","newExamples","example","exampleIndex","newDescriptionOfID","description","descriptionIndex","onClick","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/addDescription.js"],"sourcesContent":["const AddDescription = ({ id, descriptions, setDescriptions }) => {\n    const meaning = descriptions[id].meaning;\n    const type1 = descriptions[id].type1;\n    const examples = descriptions[id].examples;\n\n    return(\n        <>\n            {/*add meaning*/}\n            <label htmlFor=\"addDescription-meaning\">name:</label>\n            <textarea\n                id = \"addDescription-meaning\"\n                placeholder=\"what's the meaning of word?\"\n                value={meaning}\n                onChange={(e) => setDescriptions(descriptions.map((item, index)=>(\n                    index===id?{...item,meaning: e.target.value}:item\n                )))}\n            />\n\n            {/*add type1*/}\n            <label htmlFor=\"addDescription-type1\">name:</label>\n            <select \n                id=\"addDescription-type1\" \n                value={type1} \n                onChange={(e) => setDescriptions(descriptions.map((item, index)=>(\n                    index===id?{...item,type1: e.target.value}:item\n                )))}\n            >\n                <option value=\"n.\">n.</option>\n                <option value=\"v.\">v.</option>\n                <option value=\"adj.\">adj.</option>\n                <option value=\"adv.\">adv.</option>\n            </select>\n            {/*[select+option]: https://react.dev/reference/react-dom/components/select */}\n\n            {/*add example*/}\n            <ul>{\n                examples.map((item, index)=>(\n                    <li>\n                        <label htmlFor={`addDescription-example${index}`}>example{index}:</label>\n                        <textarea\n                            id = {`addDescription-example${index}`}\n                            placeholder=\"what's the example of word?\"\n                            value={item}\n                            onChange={(e) => {\n                                const newExamples = examples.map((example, exampleIndex)=>(\n                                    index===exampleIndex?e.target.value:example\n                                ))\n                                const newDescriptionOfID = {...descriptions[id], examples: newExamples}\n                                setDescriptions(descriptions.map((description, descriptionIndex)=>(\n                                    descriptionIndex===id?newDescriptionOfID:description\n                                )))\n                            }}\n                        />\n                    </li>\n                ))\n            }</ul>\n            <button onClick={() => {\n                const newExamples = [...examples,\"\"]\n                const newDescriptionOfID = {...descriptions[id], examples: newExamples}\n                setDescriptions(descriptions.map((item, index)=>(\n                    index===id?newDescriptionOfID:item\n                )))\n            }}>Add example</button>\n        </>\n    );\n}\nexport default AddDescription;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}