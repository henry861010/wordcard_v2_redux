{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\nimport { selectorStatus, selectorError } from \"./wordsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wordslist = () => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const status = useSelector(selectorStatus);\n  const error = useSelector(selectorError);\n  let content;\n  console.log(status);\n  if (status === \"pending\") {\n    content = /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"loading\",\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }, this);\n  } else if (status === \"fulfilled\") {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"show\",\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        setSelectedWords: setSelectedWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ShowWords, {\n        selectedWords: selectedWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else if (status === \"ferror\") {\n    content = /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"error\",\n      children: [\"error!  \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this);\n  }\n  return content;\n};\n_s(Wordslist, \"YDl34t9VSEDU74Q9jSYIOAH8UW8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Wordslist;\nexport default Wordslist;\nvar _c;\n$RefreshReg$(_c, \"Wordslist\");","map":{"version":3,"names":["useState","useSelector","SearchBar","ShowWords","selectorStatus","selectorError","jsxDEV","_jsxDEV","Fragment","_Fragment","Wordslist","_s","selectedWords","setSelectedWords","status","error","content","console","log","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordslist.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./searchBar\";\nimport ShowWords from \"./showWords\";\n\nimport { selectorStatus, selectorError } from \"./wordsSlice\";\n\nconst Wordslist = () => {\n    const [ selectedWords , setSelectedWords ] = useState([]);\n    const status = useSelector(selectorStatus);\n    const error = useSelector(selectorError);\n\n    let content;\nconsole.log(status)\n    if(status===\"pending\"){\n        content =<h2 id=\"loading\">loading</h2>\n    }\n    else if(status===\"fulfilled\"){\n        content =\n        <>\n            <h2 id=\"show\">show</h2>\n            <SearchBar setSelectedWords={setSelectedWords}/>\n            <ShowWords selectedWords={selectedWords}/>\n        </>\n    }\n    else if(status===\"ferror\"){\n        content = <h2 id=\"error\">error!  {error}</h2>\n    }\n    return content\n}\nexport default Wordslist"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAEnC,SAASC,cAAc,EAAEC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAAEC,aAAa,EAAGC,gBAAgB,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAMc,MAAM,GAAGb,WAAW,CAACG,cAAc,CAAC;EAC1C,MAAMW,KAAK,GAAGd,WAAW,CAACI,aAAa,CAAC;EAExC,IAAIW,OAAO;EACfC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACf,IAAGA,MAAM,KAAG,SAAS,EAAC;IAClBE,OAAO,gBAAET,OAAA;MAAIY,EAAE,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1C,CAAC,MACI,IAAGV,MAAM,KAAG,WAAW,EAAC;IACzBE,OAAO,gBACPT,OAAA,CAAAE,SAAA;MAAAW,QAAA,gBACIb,OAAA;QAAIY,EAAE,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBjB,OAAA,CAACL,SAAS;QAACW,gBAAgB,EAAEA;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDjB,OAAA,CAACJ,SAAS;QAACS,aAAa,EAAEA;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAC5C,CAAC;EACP,CAAC,MACI,IAAGV,MAAM,KAAG,QAAQ,EAAC;IACtBE,OAAO,gBAAGT,OAAA;MAAIY,EAAE,EAAC,OAAO;MAAAC,QAAA,GAAC,UAAQ,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjD;EACA,OAAOR,OAAO;AAClB,CAAC;AAAAL,EAAA,CAtBKD,SAAS;EAAA,QAEIT,WAAW,EACZA,WAAW;AAAA;AAAAwB,EAAA,GAHvBf,SAAS;AAuBf,eAAeA,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}