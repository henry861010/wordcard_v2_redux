{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/addWord.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords, addWord } from \"./wordsSlice\";\nimport AddDescription from \"./addDescription\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddWord = () => {\n  _s();\n  const _type1 = useSelector(selectorType1);\n  const _type2 = useSelector(selectorType2);\n  const words = useSelector(selectorWords);\n  const [name, setName] = useState();\n  const [pronounce, setPronounce] = useState();\n  const [descriptions, setDescriptions] = useState([]);\n  const [type1, setType1] = useState(_type1.map(item => false));\n  const [type2, setType2] = useState(_type2.map(item => false));\n  const dispatch = useDispatch();\n  const emptyDescription = {\n    meaning: \"\",\n    type1: \"\",\n    examples: []\n  };\n  const changeType1 = e => {\n    const newType1 = type1.map((item, index) => e.target.value === String(index) ? e.target.checked : item);\n    setType1(newType1);\n  };\n  const changeType2 = e => {\n    const newType2 = type2.map((item, index) => e.target.value === index ? e.target.checked : item);\n    setType2(newType2);\n  };\n  const add = () => {\n    const id = words.length;\n    /* can add the check procedure!!! */\n    dispatch(addWord(id, name, pronounce, descriptions, type1, type2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addWord-name\",\n      children: \"name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"addWord-name\",\n      type: \"text\",\n      value: name,\n      placeholder: \"what's the word?\",\n      onChange: e => {\n        setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addWord-pronounce\",\n      children: \"pronounce:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"addWord-pronounce\",\n      type: \"text\",\n      value: pronounce,\n      placeholder: \"what's the pronounce of word?\",\n      onChange: e => {\n        setPronounce(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"addWord-descriptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: descriptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(AddDescription, {\n            id: index,\n            descriptions: descriptions,\n            setDescriptions: setDescriptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDescriptions([...descriptions, emptyDescription]),\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addWord-type1\",\n      children: \"type1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"addWord-type1\",\n      children: _type1.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `addWord-type1${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `addWord-type1${item.type}`,\n          type: \"checkbox\",\n          value: index,\n          checked: type1[index],\n          onClick: changeType1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, `addWord-type1${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"addWord-type2\",\n      children: \"type2:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"addWord-type2\",\n      children: _type2.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `addWord-type2${item.type}`,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `addWord-type2${item.type}`,\n          type: \"checkbox\",\n          value: item,\n          checked: type2[index],\n          onClick: changeType2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, `addWord-type2${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addWord-button\",\n      onClick: add,\n      children: \"ADD WORD!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(AddWord, \"WrWE3rMA32jZr5+fVCY6VlDQJs8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = AddWord;\nexport default AddWord;\nvar _c;\n$RefreshReg$(_c, \"AddWord\");","map":{"version":3,"names":["useState","useSelector","useDispatch","selectorType1","selectorType2","selectorWords","addWord","AddDescription","jsxDEV","_jsxDEV","AddWord","_s","_type1","_type2","words","name","setName","pronounce","setPronounce","descriptions","setDescriptions","type1","setType1","map","item","type2","setType2","dispatch","emptyDescription","meaning","examples","changeType1","e","newType1","index","target","value","String","checked","changeType2","newType2","add","id","length","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/addWord.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { selectorWords, addWord } from \"./wordsSlice\";\nimport AddDescription from \"./addDescription\";\n\nconst AddWord = () => {\n    const _type1 = useSelector(selectorType1);\n    const _type2 = useSelector(selectorType2);\n    const words = useSelector(selectorWords);\n\n    const [ name, setName ] = useState();\n    const [ pronounce, setPronounce ] = useState();\n    const [ descriptions, setDescriptions ] = useState([]);\n    const [ type1, setType1 ] = useState(_type1.map(item=>false));\n    const [ type2, setType2 ] = useState(_type2.map(item=>false));\n\n    const dispatch = useDispatch();\n\n    const emptyDescription = {\n        meaning: \"\",\n        type1: \"\",\n        examples: []\n    };\n\n    const changeType1 = (e) => {\n        const newType1 = type1.map((item, index) => (\n            e.target.value===String(index)?e.target.checked:item\n        ));\n        setType1(newType1);\n    }\n\n    const changeType2 = (e) => {\n        const newType2 = type2.map((item, index) => (\n            e.target.value===(index)?e.target.checked:item\n        ));\n        setType2(newType2);\n    }\n\n    const add = () => {\n        const id = words.length;\n        /* can add the check procedure!!! */\n        dispatch(addWord(id, name, pronounce, descriptions, type1, type2));\n    }\n\n    return(\n        <main>\n            {/*add-name*/}\n            <label htmlFor=\"addWord-name\">name:</label>\n            <input \n                id = \"addWord-name\"\n                type = \"text\"\n                value = {name}\n                placeholder=\"what's the word?\"\n                onChange={(e)=>{setName(e.target.value)}}\n            /><br/>\n\n            {/*add-pronounce*/}\n            <label htmlFor=\"addWord-pronounce\">pronounce:</label>\n            <input \n                id = \"addWord-pronounce\"\n                type = \"text\"\n                value = {pronounce}\n                placeholder=\"what's the pronounce of word?\"\n                onChange={(e)=>{setPronounce(e.target.value)}}\n            /><br/>\n\n            {/*add-descriptions*/}\n            <section id = \"addWord-descriptions\">\n                <ul>{\n                    descriptions.map((item, index)=>(\n                        <li>\n                            <AddDescription id={index} descriptions={descriptions} setDescriptions={setDescriptions} />\n                        </li>\n                    ))\n                }</ul>\n                <button onClick={() => setDescriptions([...descriptions,emptyDescription])}>Add Description</button>\n            </section>\n\n            {/*add-type1*/}\n            <label htmlFor=\"addWord-type1\">type1:</label>\n            <ul id=\"addWord-type1\">{\n                _type1.map((item, index)=>(\n                    <li key={`addWord-type1${index}`}>\n                        <label htmlFor={`addWord-type1${item.type}`}>{item.type}</label>\n                        <input\n                            id={`addWord-type1${item.type}`}\n                            type=\"checkbox\"\n                            value={index}\n                            checked={type1[index]}\n                            onClick={changeType1}\n                        />\n                    </li>\n                ))\n            }</ul>\n\n            {/*add-type2*/}\n            <label htmlFor=\"addWord-type2\">type2:</label>\n            <ul id=\"addWord-type2\">{\n                _type2.map((item, index)=>(\n                    <li key={`addWord-type2${index}`}>\n                        <label htmlFor={`addWord-type2${item.type}`}>{item.type}</label>\n                        <input\n                            id={`addWord-type2${item.type}`}\n                            type=\"checkbox\"\n                            value={item}\n                            checked={type2[index]}\n                            onClick={changeType2}\n                        />\n                    </li>\n                ))\n            }</ul>\n\n            <button \n                id=\"addWord-button\"\n                onClick={add}\n            >ADD WORD!</button>\n\n        </main>\n    );\n}\nexport default AddWord"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}