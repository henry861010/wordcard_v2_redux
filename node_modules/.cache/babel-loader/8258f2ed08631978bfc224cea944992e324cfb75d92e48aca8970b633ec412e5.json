{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  words: [],\n  status: \"pending\",\n  //pending, fullfilled, error \n  error: null\n};\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () => {\n  console.log(\"begin!!!\");\n  const response = await axios.get(\"http://127.0.0.1:7001/words\");\n  console.log(\"get the result!!!\" + response.data.length);\n  return response.data;\n});\nexport const addNewWord = createAsyncThunk(\"words/addNewWord\", async newWord => {\n  try {\n    const response = await axios.post(\"http://127.0.0.1:7001/words\", newWord);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const editNewWord = createAsyncThunk('words/editNewPost', async newWord => {\n  const {\n    id\n  } = newWord;\n  try {\n    const response = await axios.put(`http://127.0.0.1:7001/words/${id}`, newWord);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const deleteNewWord = createAsyncThunk('words/deleteNewPost', async newWord => {\n  const {\n    id\n  } = newWord;\n  try {\n    await axios.delete(`http://127.0.0.1:7001/words/${id}`);\n    return newWord;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst wordsSlice = createSlice({\n  name: 'words',\n  initialState,\n  reducers: {\n    addWord: {\n      reducer(state, action) {\n        let id = state.words.length;\n        action.payload.id = id;\n        state.words.push(action.payload);\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    editWord: {\n      reducer(state, action) {\n        const id = action.payload.id;\n        const newWord = action.payload;\n        const newWords = state.words.map((word, index) => index === id ? newWord : word);\n        state.words = newWords;\n      },\n      prepare(id, name, pronounce, descriptions, type1, type2) {\n        return {\n          payload: {\n            id: id,\n            name: name,\n            pronounce: pronounce,\n            descriptions: descriptions,\n            type1: type1,\n            type2: type2\n          }\n        };\n      }\n    },\n    deleteWord: {\n      reducer(state, action) {\n        //create new words, beacuse the id of each wor will be redefined\n        const oldWords = state.words;\n        const newWords = oldWords.map(item => item.id === action.id ? null : item).filter(Boolean);\n        state.words = newWords;\n      },\n      prepare(id) {\n        return {\n          payload: {\n            id: id\n          }\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWords.pending, (state, action) => {\n      state.status = \"pending\";\n    }).addCase(fetchWords.fulfilled, (state, action) => {\n      state.words = action.payload;\n      state.status = \"fulfilled\";\n    }).addCase(fetchWords.rejected, (state, action) => {\n      console.log(\"error\");\n      state.words = action.payload.message;\n      state.status = \"error\";\n    }).addCase(addNewWord.fulfilled, (state, action) => {\n      state.words.push(action.payload);\n    }).addCase(editNewWord.fulfilled, (state, action) => {\n      const newWord = action.payload;\n      const newWords = state.words.map((word, index) => index === action.payload.id ? newWord : word);\n      state.words = newWords;\n    }).addCase(deleteNewWord.fulfilled, (state, action) => {\n      const oldWords = state.words;\n      const newWords = oldWords.filter(item => item.id !== action.payload.id);\n      state.words = newWords;\n    });\n  }\n});\nexport const {\n  addWord,\n  editWord,\n  deleteWord\n} = wordsSlice.actions;\nexport const selectorWords = state => state.words.words;\nexport const selectorWordByID = (state, id) => state.words.words.find(word => String(word.id) === String(id));\nexport const selectorStatus = state => state.words.status;\nexport const selectorError = state => state.words.error;\nexport default wordsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","words","status","error","fetchWords","console","log","response","get","data","length","addNewWord","newWord","post","err","message","editNewWord","id","put","deleteNewWord","delete","wordsSlice","name","reducers","addWord","reducer","state","action","payload","push","prepare","pronounce","descriptions","type1","type2","editWord","newWords","map","word","index","deleteWord","oldWords","item","filter","Boolean","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectorWords","selectorWordByID","find","String","selectorStatus","selectorError"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n    words: [],\n    status: \"pending\",  //pending, fullfilled, error \n    error: null\n}\n\nexport const fetchWords = createAsyncThunk(\"words/fetchWords\", async () =>{\n    console.log(\"begin!!!\")\n    const response = await axios.get(\"http://127.0.0.1:7001/words\")\n    console.log(\"get the result!!!\"+response.data.length)\n    return response.data\n})\n\nexport const addNewWord = createAsyncThunk(\"words/addNewWord\", async (newWord) =>{\n    try {\n        const response = await axios.post(\"http://127.0.0.1:7001/words\", newWord)\n        return response.data;\n    } catch (err) {\n        return err.message;\n    }\n})\n\nexport const editNewWord = createAsyncThunk('words/editNewPost', async (newWord) => {\n    const { id } = newWord;\n    try {\n        const response = await axios.put(`http://127.0.0.1:7001/words/${id}`, newWord)\n        return response.data\n    } catch (err) {\n        return err.message;\n    }\n})\n\nexport const deleteNewWord = createAsyncThunk('words/deleteNewPost', async (newWord) => {\n    const { id } = newWord;\n    try {\n        await axios.delete(`http://127.0.0.1:7001/words/${id}`)\n        return newWord\n    } catch (err) {\n        return err.message;\n    }\n})\n\nconst wordsSlice = createSlice({\n    name: 'words',\n    initialState,\n    reducers:{\n        addWord: {\n            reducer(state, action){\n                let id = state.words.length;\n                action.payload.id = id;\n                state.words.push(action.payload);\n            },\n            prepare( id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        editWord: {\n            reducer(state, action){\n                const id = action.payload.id;\n                const newWord = action.payload;\n                const newWords = state.words.map((word, index) => (\n                    index===id?newWord:word\n                ));\n                state.words = newWords;\n            },\n            prepare(id, name, pronounce, descriptions, type1, type2){\n                return{\n                    payload:{\n                        id: id,\n                        name: name,\n                        pronounce: pronounce,\n                        descriptions: descriptions,\n                        type1:type1,\n                        type2:type2,\n                    }\n                }\n            }\n        },\n        deleteWord: {\n            reducer(state, action){\n                //create new words, beacuse the id of each wor will be redefined\n                const oldWords = state.words;\n                const newWords = oldWords.map((item)=>(item.id===action.id?null:item)).filter(Boolean);\n                state.words = newWords;\n            },\n            prepare(id){\n                return{\n                    payload:{\n                        id: id\n                    }\n                }\n            }\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchWords.pending,(state, action) => {\n                state.status = \"pending\";\n            })\n            .addCase(fetchWords.fulfilled,(state, action) => {\n                state.words = action.payload;\n                state.status = \"fulfilled\";\n            })\n            .addCase(fetchWords.rejected,(state, action) => {\n                console.log(\"error\");\n                state.words = action.payload.message;\n                state.status = \"error\";\n            })\n            .addCase(addNewWord.fulfilled,(state, action) => {\n                state.words.push(action.payload);\n            })\n            .addCase(editNewWord.fulfilled,(state, action) => {\n                const newWord = action.payload;\n                const newWords = state.words.map((word, index) => (\n                    index===action.payload.id?newWord:word\n                ));\n                state.words = newWords;\n            })\n            .addCase(deleteNewWord.fulfilled,(state, action) => {\n                const oldWords = state.words;\n                const newWords = oldWords.filter( item => item.id!==action.payload.id);\n                state.words = newWords;\n            })\n    }\n});\n\nexport const {addWord, editWord, deleteWord} = wordsSlice.actions;\nexport const selectorWords = (state) => (state.words.words);\nexport const selectorWordByID = (state, id) =>\n    state.words.words.find((word) => String(word.id) === String(id))\nexport const selectorStatus = (state) => (state.words.status);\nexport const selectorError = (state) => (state.words.error);\nexport default wordsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,SAAS;EAAG;EACpBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACtEO,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;EAC/DH,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACC,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;EACrD,OAAOH,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,OAAO,MAAME,UAAU,GAAGb,gBAAgB,CAAC,kBAAkB,EAAE,MAAOc,OAAO,IAAI;EAC7E,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMR,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAED,OAAO,CAAC;IACzE,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACV,OAAOA,GAAG,CAACC,OAAO;EACtB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGlB,gBAAgB,CAAC,mBAAmB,EAAE,MAAOc,OAAO,IAAK;EAChF,MAAM;IAAEK;EAAG,CAAC,GAAGL,OAAO;EACtB,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAE,+BAA8BD,EAAG,EAAC,EAAEL,OAAO,CAAC;IAC9E,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACV,OAAOA,GAAG,CAACC,OAAO;EACtB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,aAAa,GAAGrB,gBAAgB,CAAC,qBAAqB,EAAE,MAAOc,OAAO,IAAK;EACpF,MAAM;IAAEK;EAAG,CAAC,GAAGL,OAAO;EACtB,IAAI;IACA,MAAMb,KAAK,CAACqB,MAAM,CAAE,+BAA8BH,EAAG,EAAC,CAAC;IACvD,OAAOL,OAAO;EAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,OAAOA,GAAG,CAACC,OAAO;EACtB;AACJ,CAAC,CAAC;AAEF,MAAMM,UAAU,GAAGxB,WAAW,CAAC;EAC3ByB,IAAI,EAAE,OAAO;EACbtB,YAAY;EACZuB,QAAQ,EAAC;IACLC,OAAO,EAAE;MACLC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;QAClB,IAAIV,EAAE,GAAGS,KAAK,CAACzB,KAAK,CAACS,MAAM;QAC3BiB,MAAM,CAACC,OAAO,CAACX,EAAE,GAAGA,EAAE;QACtBS,KAAK,CAACzB,KAAK,CAAC4B,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;MACpC,CAAC;MACDE,OAAOA,CAAEb,EAAE,EAAEK,IAAI,EAAES,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,EAAC;QACrD,OAAM;UACFN,OAAO,EAAC;YACJX,EAAE,EAAEA,EAAE;YACNK,IAAI,EAAEA,IAAI;YACVS,SAAS,EAAEA,SAAS;YACpBC,YAAY,EAAEA,YAAY;YAC1BC,KAAK,EAACA,KAAK;YACXC,KAAK,EAACA;UACV;QACJ,CAAC;MACL;IACJ,CAAC;IACDC,QAAQ,EAAE;MACNV,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;QAClB,MAAMV,EAAE,GAAGU,MAAM,CAACC,OAAO,CAACX,EAAE;QAC5B,MAAML,OAAO,GAAGe,MAAM,CAACC,OAAO;QAC9B,MAAMQ,QAAQ,GAAGV,KAAK,CAACzB,KAAK,CAACoC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACzCA,KAAK,KAAGtB,EAAE,GAACL,OAAO,GAAC0B,IACtB,CAAC;QACFZ,KAAK,CAACzB,KAAK,GAAGmC,QAAQ;MAC1B,CAAC;MACDN,OAAOA,CAACb,EAAE,EAAEK,IAAI,EAAES,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,EAAC;QACpD,OAAM;UACFN,OAAO,EAAC;YACJX,EAAE,EAAEA,EAAE;YACNK,IAAI,EAAEA,IAAI;YACVS,SAAS,EAAEA,SAAS;YACpBC,YAAY,EAAEA,YAAY;YAC1BC,KAAK,EAACA,KAAK;YACXC,KAAK,EAACA;UACV;QACJ,CAAC;MACL;IACJ,CAAC;IACDM,UAAU,EAAE;MACRf,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;QAClB;QACA,MAAMc,QAAQ,GAAGf,KAAK,CAACzB,KAAK;QAC5B,MAAMmC,QAAQ,GAAGK,QAAQ,CAACJ,GAAG,CAAEK,IAAI,IAAIA,IAAI,CAACzB,EAAE,KAAGU,MAAM,CAACV,EAAE,GAAC,IAAI,GAACyB,IAAK,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;QACtFlB,KAAK,CAACzB,KAAK,GAAGmC,QAAQ;MAC1B,CAAC;MACDN,OAAOA,CAACb,EAAE,EAAC;QACP,OAAM;UACFW,OAAO,EAAC;YACJX,EAAE,EAAEA;UACR;QACJ,CAAC;MACL;IACJ;EACJ,CAAC;EACD4B,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAC3C,UAAU,CAAC4C,OAAO,EAAC,CAACtB,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACxB,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACD6C,OAAO,CAAC3C,UAAU,CAAC6C,SAAS,EAAC,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACzB,KAAK,GAAG0B,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACxB,MAAM,GAAG,WAAW;IAC9B,CAAC,CAAC,CACD6C,OAAO,CAAC3C,UAAU,CAAC8C,QAAQ,EAAC,CAACxB,KAAK,EAAEC,MAAM,KAAK;MAC5CtB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBoB,KAAK,CAACzB,KAAK,GAAG0B,MAAM,CAACC,OAAO,CAACb,OAAO;MACpCW,KAAK,CAACxB,MAAM,GAAG,OAAO;IAC1B,CAAC,CAAC,CACD6C,OAAO,CAACpC,UAAU,CAACsC,SAAS,EAAC,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACzB,KAAK,CAAC4B,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,CACDmB,OAAO,CAAC/B,WAAW,CAACiC,SAAS,EAAC,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC9C,MAAMf,OAAO,GAAGe,MAAM,CAACC,OAAO;MAC9B,MAAMQ,QAAQ,GAAGV,KAAK,CAACzB,KAAK,CAACoC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACzCA,KAAK,KAAGZ,MAAM,CAACC,OAAO,CAACX,EAAE,GAACL,OAAO,GAAC0B,IACrC,CAAC;MACFZ,KAAK,CAACzB,KAAK,GAAGmC,QAAQ;IAC1B,CAAC,CAAC,CACDW,OAAO,CAAC5B,aAAa,CAAC8B,SAAS,EAAC,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMc,QAAQ,GAAGf,KAAK,CAACzB,KAAK;MAC5B,MAAMmC,QAAQ,GAAGK,QAAQ,CAACE,MAAM,CAAED,IAAI,IAAIA,IAAI,CAACzB,EAAE,KAAGU,MAAM,CAACC,OAAO,CAACX,EAAE,CAAC;MACtES,KAAK,CAACzB,KAAK,GAAGmC,QAAQ;IAC1B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACZ,OAAO;EAAEW,QAAQ;EAAEK;AAAU,CAAC,GAAGnB,UAAU,CAAC8B,OAAO;AACjE,OAAO,MAAMC,aAAa,GAAI1B,KAAK,IAAMA,KAAK,CAACzB,KAAK,CAACA,KAAM;AAC3D,OAAO,MAAMoD,gBAAgB,GAAGA,CAAC3B,KAAK,EAAET,EAAE,KACtCS,KAAK,CAACzB,KAAK,CAACA,KAAK,CAACqD,IAAI,CAAEhB,IAAI,IAAKiB,MAAM,CAACjB,IAAI,CAACrB,EAAE,CAAC,KAAKsC,MAAM,CAACtC,EAAE,CAAC,CAAC;AACpE,OAAO,MAAMuC,cAAc,GAAI9B,KAAK,IAAMA,KAAK,CAACzB,KAAK,CAACC,MAAO;AAC7D,OAAO,MAAMuD,aAAa,GAAI/B,KAAK,IAAMA,KAAK,CAACzB,KAAK,CAACE,KAAM;AAC3D,eAAekB,UAAU,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}