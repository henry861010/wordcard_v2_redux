{"ast":null,"code":"var _jsxFileName = \"/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordPage.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectorWords, deleteNewWord, selectorStatus } from \"./wordsSlice\";\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WordPage = () => {\n  _s();\n  const status = useSelector(selectorStatus);\n  const type1 = useSelector(selectorType1);\n  const type2 = useSelector(selectorType2);\n  const words = useSelector(selectorWords);\n  const dispatch = useDispatch();\n  const {\n    Word\n  } = useParams();\n  if (status === \"pending\") return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 37\n  }, this);\n  if (status === \"error\") return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 35\n  }, this);else {\n    const word = words.find(item => item.name === Word);\n    const wordIndex = words.findIndex(item => item.name === Word);\n    const prviousWordName = words[(words.length + wordIndex - 1) % words.length].name;\n    const nextWordName = words[(wordIndex + 1) % words.length].name;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/${prviousWordName}`,\n          children: \"previous Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${nextWordName}`,\n          children: \"next Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"pronounce:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.pronounce\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: word.type1.map((item, index) => {\n            if (item) return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: type1[index].type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, `wordPage-typ1${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: word.type2.map((item, index) => {\n            if (item) return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: type2[index].type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)\n            }, `wordPage-typ2${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"descriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: word.descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              border: '2px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"meaning:\", description.meaning]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"type\",\n              children: [\"type: \", description.type1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"example:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: description.examples.map((example, indexExample) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: example\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 45\n                }, this)\n              }, `${word.name}-description${index}-example${indexExample}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, `${word.name}-description${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${word.name}`,\n        children: \"Edit Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(deleteNewWord(word)),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n_s(WordPage, \"9CocNw5aXsnC+2UZYqMBv9wYiI8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useParams];\n});\n_c = WordPage;\nexport default WordPage;\nvar _c;\n$RefreshReg$(_c, \"WordPage\");","map":{"version":3,"names":["useSelector","useDispatch","selectorWords","deleteNewWord","selectorStatus","selectorType1","selectorType2","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","WordPage","_s","status","type1","type2","words","dispatch","Word","children","fileName","_jsxFileName","lineNumber","columnNumber","word","find","item","name","wordIndex","findIndex","prviousWordName","length","nextWordName","to","pronounce","map","index","type","descriptions","description","style","border","meaning","className","examples","example","indexExample","onClick","_c","$RefreshReg$"],"sources":["/home/henry/reactjs/wordcard_v2_redux/src/features/words/wordPage.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { selectorWords, deleteNewWord, selectorStatus } from \"./wordsSlice\"\nimport { selectorType1, selectorType2 } from \"../type/typeSlice\"\nimport { Link, useParams } from \"react-router-dom\"\n\nconst WordPage = () => {\n    const status = useSelector(selectorStatus);\n    const type1 = useSelector(selectorType1);\n    const type2 = useSelector(selectorType2);\n    const words = useSelector(selectorWords);\n    const dispatch = useDispatch();\n    const { Word } = useParams();\n\n    if( status===\"pending\" ) return <h2>loading</h2>\n    if( status===\"error\" ) return <h2>error</h2>\n    else{\n        const word = words.find((item) => (item.name === Word));\n        const wordIndex = words.findIndex((item) => (item.name === Word));\n\n        const prviousWordName = words[(words.length+wordIndex-1)%words.length].name;\n        const nextWordName = words[(wordIndex+1)%words.length].name;\n\n        return(\n            <>\n                <article>\n                    <Link to={`/${prviousWordName}`}>previous Word</Link>\n                    <Link to={`/${nextWordName}`}>next Word</Link>\n                    {/*word name*/}\n                    <h2>{word.name}</h2>\n\n                    {/*pronounce*/}\n                    <h3>pronounce:</h3>\n                    <p>{word.pronounce}</p>\n\n                    {/*type1*/}\n                    <ul>{\n                        word.type1.map((item, index)=>{\n                            if(item) return(\n                                <li key={`wordPage-typ1${index}`}>\n                                    <p>{type1[index].type}</p>\n                                </li>\n                            )\n                        })\n                    }</ul>\n\n                    {/*type2*/}\n                    <ul>{\n                        word.type2.map((item, index)=>{\n                            if(item) return(\n                                <li key={`wordPage-typ2${index}`}>\n                                    <p>{type2[index].type}</p>\n                                </li>\n                            )\n                        })\n                    }</ul>\n\n                    {/*description*/}\n                    <h3>descriptions</h3>\n                    <ol>{\n                        word.descriptions.map((description,index)=>(\n                            <li key={`${word.name}-description${index}`} style={{ border: '2px solid black' }}>\n                                <h4>meaning:{description.meaning}</h4>\n                                <p className=\"type\">type: {description.type1}</p>\n                                <p>example:</p>\n                                <ol>{\n                                    description.examples.map((example, indexExample)=>(\n                                        <li key={`${word.name}-description${index}-example${indexExample}`}>\n                                            <p>{example}</p>\n                                        </li>\n                                    ))\n                                }</ol>\n                            </li>\n                        ))\n                    }</ol>\n                </article>\n                <Link to={`/edit/${word.name}`}>Edit Word</Link>\n                <button type=\"button\" onClick={()=>dispatch(deleteNewWord(word))}>delete</button>\n            </>\n        );\n    }\n}\nexport default WordPage\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}